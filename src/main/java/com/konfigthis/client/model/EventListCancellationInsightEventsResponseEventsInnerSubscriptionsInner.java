/*
 * Production
 * Baremetrics provides real-time subscription metrics for teams built with Stripe, Shopify Partners, Braintree, Recurly, Chargebee, Google Play, and App Store Connect.   In addition to metrics, Baremetrics provides tools that help you reduce churn and grow your business faster:   Recover: Prevent failed charges and keep your hard-earned revenue with our 100% automated toolkit.   Cancellation insights: Learn exactly why your customers cancel, calculate lost revenue by cancellation reason, and send automated emails to win customers back.  Flightpath: Plan for the future with flexible financial modeling tools built for growing SaaS companies.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner {
  public static final String SERIALIZED_NAME_OID = "oid";
  @SerializedName(SERIALIZED_NAME_OID)
  private String oid;

  public static final String SERIALIZED_NAME_SOURCE_ID = "source_id";
  @SerializedName(SERIALIZED_NAME_SOURCE_ID)
  private String sourceId;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_CANCELED_AT = "canceled_at";
  @SerializedName(SERIALIZED_NAME_CANCELED_AT)
  private Integer canceledAt = 0;

  public static final String SERIALIZED_NAME_STARTED_AT = "started_at";
  @SerializedName(SERIALIZED_NAME_STARTED_AT)
  private Integer startedAt = 0;

  public static final String SERIALIZED_NAME_PROCESSED = "processed";
  @SerializedName(SERIALIZED_NAME_PROCESSED)
  private Boolean processed = true;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active = true;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity = 0;

  public static final String SERIALIZED_NAME_DISCOUNT = "discount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT)
  private Integer discount = 0;

  public static final String SERIALIZED_NAME_MRR = "mrr";
  @SerializedName(SERIALIZED_NAME_MRR)
  private Integer mrr = 0;

  public static final String SERIALIZED_NAME_ADD_ON_MRR = "add_on_mrr";
  @SerializedName(SERIALIZED_NAME_ADD_ON_MRR)
  private Integer addOnMrr = 0;

  public static final String SERIALIZED_NAME_PLAN = "plan";
  @SerializedName(SERIALIZED_NAME_PLAN)
  private Object plan = null;

  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner() {
  }

  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner oid(String oid) {
    
    
    
    
    this.oid = oid;
    return this;
  }

   /**
   * Get oid
   * @return oid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public String getOid() {
    return oid;
  }


  public void setOid(String oid) {
    
    
    
    this.oid = oid;
  }


  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner sourceId(String sourceId) {
    
    
    
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public String getSourceId() {
    return sourceId;
  }


  public void setSourceId(String sourceId) {
    
    
    
    this.sourceId = sourceId;
  }


  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner source(String source) {
    
    
    
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "stripe", value = "")

  public String getSource() {
    return source;
  }


  public void setSource(String source) {
    
    
    
    this.source = source;
  }


  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner canceledAt(Integer canceledAt) {
    
    
    
    
    this.canceledAt = canceledAt;
    return this;
  }

   /**
   * Get canceledAt
   * @return canceledAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1540920254", value = "")

  public Integer getCanceledAt() {
    return canceledAt;
  }


  public void setCanceledAt(Integer canceledAt) {
    
    
    
    this.canceledAt = canceledAt;
  }


  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner startedAt(Integer startedAt) {
    
    
    
    
    this.startedAt = startedAt;
    return this;
  }

   /**
   * Get startedAt
   * @return startedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1538422033", value = "")

  public Integer getStartedAt() {
    return startedAt;
  }


  public void setStartedAt(Integer startedAt) {
    
    
    
    this.startedAt = startedAt;
  }


  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner processed(Boolean processed) {
    
    
    
    
    this.processed = processed;
    return this;
  }

   /**
   * Get processed
   * @return processed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getProcessed() {
    return processed;
  }


  public void setProcessed(Boolean processed) {
    
    
    
    this.processed = processed;
  }


  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner active(Boolean active) {
    
    
    
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    
    
    
    this.active = active;
  }


  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner quantity(Integer quantity) {
    
    
    
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    
    
    
    this.quantity = quantity;
  }


  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner discount(Integer discount) {
    
    
    
    
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getDiscount() {
    return discount;
  }


  public void setDiscount(Integer discount) {
    
    
    
    this.discount = discount;
  }


  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner mrr(Integer mrr) {
    
    
    
    
    this.mrr = mrr;
    return this;
  }

   /**
   * Get mrr
   * @return mrr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getMrr() {
    return mrr;
  }


  public void setMrr(Integer mrr) {
    
    
    
    this.mrr = mrr;
  }


  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner addOnMrr(Integer addOnMrr) {
    
    
    
    
    this.addOnMrr = addOnMrr;
    return this;
  }

   /**
   * Get addOnMrr
   * @return addOnMrr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getAddOnMrr() {
    return addOnMrr;
  }


  public void setAddOnMrr(Integer addOnMrr) {
    
    
    
    this.addOnMrr = addOnMrr;
  }


  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner plan(Object plan) {
    
    
    
    
    this.plan = plan;
    return this;
  }

   /**
   * Get plan
   * @return plan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPlan() {
    return plan;
  }


  public void setPlan(Object plan) {
    
    
    
    this.plan = plan;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner instance itself
   */
  public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner = (EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner) o;
    return Objects.equals(this.oid, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.oid) &&
        Objects.equals(this.sourceId, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.sourceId) &&
        Objects.equals(this.source, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.source) &&
        Objects.equals(this.canceledAt, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.canceledAt) &&
        Objects.equals(this.startedAt, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.startedAt) &&
        Objects.equals(this.processed, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.processed) &&
        Objects.equals(this.active, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.active) &&
        Objects.equals(this.quantity, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.quantity) &&
        Objects.equals(this.discount, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.discount) &&
        Objects.equals(this.mrr, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.mrr) &&
        Objects.equals(this.addOnMrr, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.addOnMrr) &&
        Objects.equals(this.plan, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.plan)&&
        Objects.equals(this.additionalProperties, eventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(oid, sourceId, source, canceledAt, startedAt, processed, active, quantity, discount, mrr, addOnMrr, plan, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner {\n");
    sb.append("    oid: ").append(toIndentedString(oid)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    canceledAt: ").append(toIndentedString(canceledAt)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    processed: ").append(toIndentedString(processed)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    mrr: ").append(toIndentedString(mrr)).append("\n");
    sb.append("    addOnMrr: ").append(toIndentedString(addOnMrr)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("oid");
    openapiFields.add("source_id");
    openapiFields.add("source");
    openapiFields.add("canceled_at");
    openapiFields.add("started_at");
    openapiFields.add("processed");
    openapiFields.add("active");
    openapiFields.add("quantity");
    openapiFields.add("discount");
    openapiFields.add("mrr");
    openapiFields.add("add_on_mrr");
    openapiFields.add("plan");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner is not found in the empty JSON string", EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("oid") != null && !jsonObj.get("oid").isJsonNull()) && !jsonObj.get("oid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `oid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("oid").toString()));
      }
      if ((jsonObj.get("source_id") != null && !jsonObj.get("source_id").isJsonNull()) && !jsonObj.get("source_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source_id").toString()));
      }
      if ((jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) && !jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner>() {
           @Override
           public void write(JsonWriter out, EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner
  * @throws IOException if the JSON string is invalid with respect to EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner
  */
  public static EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner.class);
  }

 /**
  * Convert an instance of EventListCancellationInsightEventsResponseEventsInnerSubscriptionsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

