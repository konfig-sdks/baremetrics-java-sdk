/*
 * Production
 * Baremetrics provides real-time subscription metrics for teams built with Stripe, Shopify Partners, Braintree, Recurly, Chargebee, Google Play, and App Store Connect.   In addition to metrics, Baremetrics provides tools that help you reduce churn and grow your business faster:   Recover: Prevent failed charges and keep your hard-earned revenue with our 100% automated toolkit.   Cancellation insights: Learn exactly why your customers cancel, calculate lost revenue by cancellation reason, and send automated emails to win customers back.  Flightpath: Plan for the future with flexible financial modeling tools built for growing SaaS companies.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.EventCreateInsightEventRequest;
import com.konfigthis.client.model.EventCreateInsightEventResponse;
import com.konfigthis.client.model.EventGetEventByIdResponse;
import com.konfigthis.client.model.EventListCancellationInsightEventsResponse;
import com.konfigthis.client.model.EventUpdateEventByIdRequest;
import com.konfigthis.client.model.EventUpdateEventByIdResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventApi
 */
@Disabled
public class EventApiTest {

    private static EventApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new EventApi(apiClient);
    }

    /**
     * Create Event
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createInsightEventTest() throws ApiException {
        String reasonId = null;
        String comment = null;
        String customerOid = null;
        List<String> subscriptionOids = null;
        EventCreateInsightEventResponse response = api.createInsightEvent(reasonId)
                .comment(comment)
                .customerOid(customerOid)
                .subscriptionOids(subscriptionOids)
                .execute();
        // TODO: test validations
    }

    /**
     * Show Event
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventByIdTest() throws ApiException {
        String id = null;
        EventGetEventByIdResponse response = api.getEventById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * List Events
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCancellationInsightEventsTest() throws ApiException {
        EventListCancellationInsightEventsResponse response = api.listCancellationInsightEvents()
                .execute();
        // TODO: test validations
    }

    /**
     * Update Event
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateEventByIdTest() throws ApiException {
        String id = null;
        String reasonId = null;
        String comment = null;
        EventUpdateEventByIdResponse response = api.updateEventById(id)
                .reasonId(reasonId)
                .comment(comment)
                .execute();
        // TODO: test validations
    }

}
