/*
 * Production
 * Baremetrics provides real-time subscription metrics for teams built with Stripe, Shopify Partners, Braintree, Recurly, Chargebee, Google Play, and App Store Connect.   In addition to metrics, Baremetrics provides tools that help you reduce churn and grow your business faster:   Recover: Prevent failed charges and keep your hard-earned revenue with our 100% automated toolkit.   Cancellation insights: Learn exactly why your customers cancel, calculate lost revenue by cancellation reason, and send automated emails to win customers back.  Flightpath: Plan for the future with flexible financial modeling tools built for growing SaaS companies.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.LocalDate;
import com.konfigthis.client.model.MetricShowCohortsResponseInner;
import com.konfigthis.client.model.MetricShowDetailsResponse;
import com.konfigthis.client.model.MetricShowPlanBreakoutResponse;
import com.konfigthis.client.model.MetricShowSummaryResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetricApi
 */
@Disabled
public class MetricApiTest {

    private static MetricApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new MetricApi(apiClient);
    }

    /**
     * Show Customers
     *
     * Returns a list of customers that make up this metric. For example, the upgrades metric will return all customers who have upgraded within the selected range. You can also see their MRR contribution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCustomersTest() throws ApiException {
        LocalDate startDate = null;
        LocalDate endDate = null;
        String metric = null;
        String response = api.listCustomers(startDate, endDate, metric)
                .execute();
        // TODO: test validations
    }

    /**
     * Show Cohorts
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void showCohortsTest() throws ApiException {
        List<MetricShowCohortsResponseInner> response = api.showCohorts()
                .execute();
        // TODO: test validations
    }

    /**
     * Show Metric
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void showDetailsTest() throws ApiException {
        String metric = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        Integer compareTo = null;
        MetricShowDetailsResponse response = api.showDetails(metric, startDate, endDate)
                .compareTo(compareTo)
                .execute();
        // TODO: test validations
    }

    /**
     * Show Plan Breakout
     *
     * This allows you to break down a metric by plan, across a date range
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void showPlanBreakoutTest() throws ApiException {
        LocalDate startDate = null;
        LocalDate endDate = null;
        String metric = null;
        MetricShowPlanBreakoutResponse response = api.showPlanBreakout(startDate, endDate, metric)
                .execute();
        // TODO: test validations
    }

    /**
     * Show Summary
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void showSummaryTest() throws ApiException {
        String startDate = null;
        String endDate = null;
        MetricShowSummaryResponse response = api.showSummary(startDate, endDate)
                .execute();
        // TODO: test validations
    }

}
