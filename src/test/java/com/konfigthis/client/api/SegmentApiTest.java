/*
 * Production
 * Baremetrics provides real-time subscription metrics for teams built with Stripe, Shopify Partners, Braintree, Recurly, Chargebee, Google Play, and App Store Connect.   In addition to metrics, Baremetrics provides tools that help you reduce churn and grow your business faster:   Recover: Prevent failed charges and keep your hard-earned revenue with our 100% automated toolkit.   Cancellation insights: Learn exactly why your customers cancel, calculate lost revenue by cancellation reason, and send automated emails to win customers back.  Flightpath: Plan for the future with flexible financial modeling tools built for growing SaaS companies.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.SegmentCreateRequestRequest;
import com.konfigthis.client.model.SegmentCreateRequestRequestQueryInner;
import com.konfigthis.client.model.SegmentCreateRequestResponse;
import com.konfigthis.client.model.SegmentFindWithoutSaveRequest;
import com.konfigthis.client.model.SegmentFindWithoutSaveResponse;
import com.konfigthis.client.model.SegmentGetFieldsResponse;
import com.konfigthis.client.model.SegmentListSegmentsResponse;
import com.konfigthis.client.model.SegmentShowDetailsResponse;
import com.konfigthis.client.model.SegmentUpdateByIdRequest;
import com.konfigthis.client.model.SegmentUpdateByIdResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SegmentApi
 */
@Disabled
public class SegmentApiTest {

    private static SegmentApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SegmentApi(apiClient);
    }

    /**
     * Create Segment
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRequestTest() throws ApiException {
        List<SegmentCreateRequestRequestQueryInner> query = null;
        String name = null;
        SegmentCreateRequestResponse response = api.createRequest(query)
                .name(name)
                .execute();
        // TODO: test validations
    }

    /**
     * Search Segment
     *
     * Search for a segment without saving it
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findWithoutSaveTest() throws ApiException {
        List<SegmentCreateRequestRequestQueryInner> query = null;
        Integer perPage = null;
        Integer page = null;
        String sort = null;
        String order = null;
        SegmentFindWithoutSaveResponse response = api.findWithoutSave(query)
                .perPage(perPage)
                .page(page)
                .sort(sort)
                .order(order)
                .execute();
        // TODO: test validations
    }

    /**
     * List Fields
     *
     * Returns the fields that can be used to create/search a segment. The key is the category, and a category contains multiple fields.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFieldsTest() throws ApiException {
        SegmentGetFieldsResponse response = api.getFields()
                .execute();
        // TODO: test validations
    }

    /**
     * List Segments
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSegmentsTest() throws ApiException {
        SegmentListSegmentsResponse response = api.listSegments()
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Segment
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeByIdTest() throws ApiException {
        String id = null;
        Object response = api.removeById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Show Segment
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void showDetailsTest() throws ApiException {
        String id = null;
        SegmentShowDetailsResponse response = api.showDetails(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Segment
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByIdTest() throws ApiException {
        String id = null;
        String name = null;
        List<SegmentCreateRequestRequestQueryInner> query = null;
        SegmentUpdateByIdResponse response = api.updateById(id)
                .name(name)
                .query(query)
                .execute();
        // TODO: test validations
    }

}
